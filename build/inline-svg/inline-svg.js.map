{"version":3,"file":"inline-svg/inline-svg.js","mappings":"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","sources":["webpack://tailpress-blocks/external window \"React\"","webpack://tailpress-blocks/external window [\"wp\",\"blockEditor\"]","webpack://tailpress-blocks/external window [\"wp\",\"blocks\"]","webpack://tailpress-blocks/external window [\"wp\",\"components\"]","webpack://tailpress-blocks/external window [\"wp\",\"element\"]","webpack://tailpress-blocks/external window [\"wp\",\"i18n\"]","webpack://tailpress-blocks/external window [\"wp\",\"serverSideRender\"]","webpack://tailpress-blocks/webpack/bootstrap","webpack://tailpress-blocks/webpack/runtime/compat get default export","webpack://tailpress-blocks/webpack/runtime/define property getters","webpack://tailpress-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://tailpress-blocks/webpack/runtime/make namespace object","webpack://tailpress-blocks/./src/inline-svg/inline-svg.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { Fragment } from '@wordpress/element';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport { Button, Panel, PanelBody, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n    ...metadata,\n\tedit(props) {\n        const { attributes, setAttributes } = props;\n\n        const onSelectMedia = (media) => {\n\t\t\tsetAttributes({\n\t\t\t\tmediaId: media.id,\n\t\t\t\tmediaUrl: media.url,\n\t\t\t})\n\t\t}\n\n\t\tconst removeMedia = () => {\n\t\t\tsetAttributes({\n                ...attributes,\n                mediaId: 0,\n                mediaUrl: ''\n\t\t\t});\n\t\t}\n\n        const updateLinkURL = (url) => {\n            setAttributes({\n                ...attributes,\n                linkURL: url\n            });\n        }\n\n        const updateLinkClasses = (classes) => {\n            setAttributes({\n                ...attributes,\n                linkClasses: classes\n            });\n        }\n\n        const updateSVGClasses = (classes) => {\n            setAttributes({\n                ...attributes,\n                svgClasses: classes\n            });\n        }\n\n        return (\n            <Fragment>\n                <InspectorControls>\n                    <Panel header={__(\"Inline SVG\", metadata.textdomain)}>\n                        <PanelBody title={__('SVG Image', metadata.textdomain)} initialOpen={true} >\n                            <PanelRow>\n                                <div className=\"editor-post-featured-image  border border-dashed border-black\">\n                                <MediaUploadCheck>\n                                    <MediaUpload\n                                        onSelect={onSelectMedia}\n                                        value={attributes.mediaId}\n                                        allowedTypes={['image/svg', 'image/svg+xml']}\n                                        render={({open}) => (\n                                            <Button\n                                                className={attributes.mediaId == 0 ? 'editor-post-featured-image__toggle' : 'editor-post-featured-image__preview'}\n                                                onClick={open}\n                                            >\n                                                {attributes.mediaId == 0 && __('Choose an image', metadata.textdomain)}\n                                                {attributes.mediaUrl != undefined &&\n                                                    <Fragment>\n                                                        <img src={ attributes.mediaUrl } />\n                                                    </Fragment>\n                                                }\n                                            </Button>\n                                        )}\n                                    />\n                                </MediaUploadCheck>\n                                {attributes.mediaId != 0 &&\n                                    <MediaUploadCheck>\n                                        <MediaUpload\n                                            title={__('Replace image', metadata.textdomain)}\n                                            value={attributes.mediaId}\n                                            onSelect={onSelectMedia}\n                                            allowedTypes={['image']}\n                                            render={({open}) => (\n                                                <Button onClick={open}>{__(\"Replace image\", metadata.textdomain)}</Button>\n                                            )}\n                                        />\n                                    </MediaUploadCheck>\n                                }\n                                {attributes.mediaId != 0 &&\n                                    <MediaUploadCheck>\n                                        <Button onClick={removeMedia} isDestructive>{__(\"Remove image\", metadata.textdomain)}</Button>\n                                    </MediaUploadCheck>\n                                }\n                                </div>\n                            </PanelRow>\n                            <PanelRow className=\"items-start flex-col gap-y-2\">\n                                <label>{__(\"SVG Classes\", metadata.textdomain)}</label>\n                                <input type=\"text\" value={ attributes.svgClasses } onChange={ (e) => updateSVGClasses(e.target.value) } />\n                            </PanelRow>\n                        </PanelBody>\n                        <PanelBody title={__('Link/URL', metadata.textdomain)}>\n                            <PanelRow className=\"items-start flex-col gap-y-2\">\n                                <label>{__(\"Link URL\", metadata.textdomain)}</label>\n                                <input type=\"text\" value={ attributes.linkURL } onChange={ (e) => updateLinkURL(e.target.value) } />\n                            </PanelRow>\n                            <PanelRow className=\"items-start flex-col gap-y-2\">\n                                <label>{__(\"Link Classes\", metadata.textdomain)}</label>\n                                <input type=\"text\" value={ attributes.linkClasses } onChange={ (e) => updateLinkClasses(e.target.value) } />\n                            </PanelRow>\n                        </PanelBody>\n                    </Panel>\n                </InspectorControls>\n                <ServerSideRender block={ 'tailpress-blocks/inline-svg' } attributes={ attributes } className=\"relative h-max\" />\n            </Fragment>\n        );\n    },\n    save(props) {\n        return null;\n    }\n});\n"],"names":["registerBlockType","InspectorControls","MediaUpload","MediaUploadCheck","Fragment","ServerSideRender","Button","Panel","PanelBody","PanelRow","__","metadata","name","edit","props","attributes","setAttributes","onSelectMedia","media","mediaId","id","mediaUrl","url","removeMedia","updateLinkURL","linkURL","updateLinkClasses","classes","linkClasses","updateSVGClasses","svgClasses","createElement","header","textdomain","title","initialOpen","className","onSelect","value","allowedTypes","render","open","onClick","undefined","src","isDestructive","type","onChange","e","target","block","save"],"sourceRoot":""}